{
	// Place your Ann 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"AnnClass": {
		"prefix": "AnnClass",
		"body": [
			"---@class ${1:${TM_FILENAME/(.*)\\.[a-z]+/$1/i}}\nlocal $1 = Ann.Class(\"$1\", Ann.Object)\n\n---@overload fun():void 构造\nfunction $1:OnInit()\n\t--self.__TickInterval = 0\n\t--self.__bEnableTick = false\n\t--self.__Role = Ann.Define.ERole.${2|Client,Server,Both|}\nend\n\n---@overload fun():void 析构\nfunction $1:OnDestory()\n\nend\n\n---@overload fun():void 重置\nfunction $1:OnReset()\n\nend\n\n---@overload fun(deltaSeconds:number):void 时钟\n--function $1:OnTick(deltaSeconds)\n\n--end\n\nreturn $1"
		],
		"description": "新建 Ann Class",
		"scope": "lua"
	},
	"UnLuaClass": {
		"prefix": "UnLuaClass",
		"body": [
			"---@class ${1:${TM_FILENAME/(.*)\\.[a-z]+/$1/i}}\nlocal $1 = UnLua.Class(${2| ,\"\"|}$3)\n\nreturn $1"
		],
		"description": "新建 UnLua Class",
		"scope": "lua"
	}
}